#!/bin/sh
# Bootstrap essential packages on Linux hosts using apt or dnf.

set -eu

log()  { printf '[packages] %s\n' "$*"; }
warn() { printf '[warn] %s\n' "$*" >&2; }

SUDO=""
if [ "$(id -u)" -ne 0 ]; then
  if command -v sudo >/dev/null 2>&1; then
    SUDO="sudo"
  else
    warn "sudo not available and not running as root; skipping package install."
    exit 0
  fi
fi

if command -v apt-get >/dev/null 2>&1; then
  MANAGER="apt"
elif command -v dnf >/dev/null 2>&1; then
  MANAGER="dnf"
else
  warn "No supported package manager detected (apt or dnf)."
  exit 0
fi

log "Detected $MANAGER; ensuring baseline tooling is present."

case "$MANAGER" in
  apt)
    PACKAGES="\
build-essential\n\
curl\n\
git\n\
ripgrep\n\
fzf\n\
tmux\n\
neovim\n\
python3\n\
python3-venv\n\
python3-pip\n\
golang-go\n\
cmake\n\
pkg-config\n\
meson\n\
autoconf\n\
automake\n\
libtool\n\
wget\n\
unzip\n\
htop\n\
chezmoi\n\
zsh\n\
zsh-autosuggestions\n\
zsh-theme-powerlevel10k\n\
fonts-jetbrains-mono"

    $SUDO apt-get update

    for pkg in $PACKAGES; do
      if dpkg -s "$pkg" >/dev/null 2>&1; then
        continue
      fi
      if ! $SUDO apt-get install -y "$pkg"; then
        warn "Failed to install $pkg (continuing)."
      fi
    done
    ;;
  dnf)
    PACKAGES="\
gcc\n\
gcc-c++\n\
make\n\
curl\n\
git\n\
ripgrep\n\
fzf\n\
tmux\n\
neovim\n\
python3\n\
python3-pip\n\
python3-virtualenv\n\
golang\n\
cmake\n\
meson\n\
autoconf\n\
automake\n\
libtool\n\
pkgconf-pkg-config\n\
wget\n\
unzip\n\
htop\n\
chezmoi\n\
zsh\n\
zsh-autosuggestions\n\
powerlevel10k\n\
jetbrains-mono-fonts"

    $SUDO dnf -y makecache

    for pkg in $PACKAGES; do
      if rpm -q "$pkg" >/dev/null 2>&1; then
        continue
      fi
      if ! $SUDO dnf -y install "$pkg"; then
        warn "Failed to install $pkg (continuing)."
      fi
    done
    ;;
esac

log "Package bootstrap finished."
